#+TODO: TODO(t) IN-PROGRESS (p) | DONE(d) CANCELLED(c)
#+PRIORITIES: 1 5 3
* Notes
** General Notes
<2023-04-10 Mon 17:13>: These are my previous notes for this Vue based app:

<2023-04-09 Sun 01:49>: App idea:
- Kitchen timer, metronome, stopwatch all in one page or app
- It could be based in Vue.js to make it a super easy app to use to deliberately learn Vue but not make it TOO simple either to have people shrug the app idea off
- Vue Kitchen timer app where it's all peach gold pixel art themed, similar to the Mario Advance 2 stage select screen on GBA but more emphasized. Need to ask online how to create scalable pixel art in that scenario or if it's better to start with assets that are scalable in Gimp etc

** App Name Ideas
<2023-04-10 Mon 17:18>: This has to be some kind of app that incorporates the following 3 ideas:
- Stopwatch (Quick stopwatch)
- Kitchen Timer (Just like a microwave with easy to access minute panels)
- Metronome (Set the BPM, sound of the click itself, and time signature)

With this in mind, this is what I can think of:
- Times 3: A 3-in-1 timer app that incorporates a stopwatch, kitchen timer, and metronome for all of those times when you wish you had each of these available to you

Idea brainstorm:
#+begin_src text
Metronomes set the motion in pace for beautiful music to be set in the sequence of time and space.
Kitchen timers help you prepare wonderful recipes and food, and prevent ruining food
Stopwatches allow you to easily time yourself on tasks for athletic or even everyday tasks

Ideas for names: Timer, Timed, Timez, "Time To Get A Watch", Stroke, Clock Stroke, Grandfather Clock Swings,
#+end_src

<2023-04-10 Mon 19:12>: Name Ideas:
- Click, Clock, Tick
- Ticker
- Click Clock

<2023-04-10 Mon 19:19>: Final name:
- Click Clock

** Related Learning Links
Decent looking guide on how to use Rails and Vue JS:
- https://www.engineyard.com/blog/rails-and-vue-js-part-1/

Guide on how to make a Vue app for mobile:
- https://www.sam-solutions.com/blog/vue-js-mobile-development/

Guide on how to use React as a frontend, and C# (.NET) for the backend for an application:
- https://www.freecodecamp.org/news/create-a-react-app-with-a-dot-net-backend/

<2023-04-10 Mon 18:42>: I confirmed that the version of Rails I am currently using is Version 7.0.4.3 via the following command:
#+begin_src bash
sam@notestation ~/Downloads $ rails --version
Rails 7.0.4.3
#+end_src

I then found a related Rails + Vue + Vite template here from GitHub:
- https://github.com/IsraelDCastro/rails-vite-tailwindcss-template

This is great because I can just use this command to quickly build the Rails app without having to worry about making sure all the connections work so that I can just focus on learning Vue accordingly:
#+begin_src bash
rails new my_app --skip-webpack-install --skip-javascript -d <database_you_want> -m https://raw.githubusercontent.com/IsraelDCastro/rails-vite-tailwindcss-template/master/template.rb --vue
#+end_src

* Jira Tickets
** Todo
*** TODO Watch related intro videos on Vue.js for refresher purposes
<2023-04-12 Wed 21:12>: I'm in the process of watching a few Vue.js tutorials just to get a feel for it so far.

From the looks of it, it seems just like React where it is its own self contained framework where you can build out repeatable components easily. The interpolation aspect seems very similar to React, and also the whole idea of binding to a div tag for the entire application itself is just like React as well.

*** TODO Check Vue.js docs page
<2023-04-11 Tue 19:39>: I need to check Vue.js docs page for some refreshers on its use so that I can figure out how to implement the basic page I want for this application.
*** TODO Work on Figma wireframe for application
<2023-04-11 Tue 19:40>: I would like to revisit some basic Figma tutorials to get a good wireframe going for the application itself so I can plan out its features.
** In Progress
*** IN-PROGRESS Modify actual 'Hello World' Vue app to display a few other items so that I get the hang of actually editing the project
<2023-04-17 Mon 11:51>: I would like to figure out how to actually edit their 'Hello World' project so that I can figure out how to build more components for the application itself.

<2023-04-17 Mon 11:52>: As per the main homepage from the 'Hello World' app itself, it asked me to modify the 'components/HelloWorld.vue' file in order to modify it accordingly.

It seems like it does components in a similar way to how React does it, so it shouldn't take too much brain power to figure out how to add more components as I go along.
** Completed
*** DONE Git clone related 'Rails + Vue + Vite' template from GitHub and get it running locally
<2023-04-10 Mon 19:35>: I need to follow the instructions present within the related GitHub page:
- https://github.com/IsraelDCastro/rails-vite-tailwindcss-template

More specifically I need to implement this by using the following command:
#+begin_src bash
rails new my_app --skip-webpack-install --skip-javascript -d <database_you_want> -m https://raw.githubusercontent.com/IsraelDCastro/rails-vite-tailwindcss-template/master/template.rb --vue
#+end_src

<2023-04-11 Tue 18:57>: I used the following command which was the 'From GitHub with vue' command on the related README  for the main GitHub repo of the template itself (https://github.com/IsraelDCastro/rails-vite-tailwindcss-template):
#+begin_src bash
sam@notestation ~/hub/ClickClock $ rails new clickclock --skip-webpack-install --skip-javascript -d postgresql -m https://raw.githubusercontent.com/IsraelDCastro/rails-vite-tailwindcss-template/master/template.rb --vue
#+end_src

I then received the following error:
#+begin_src bash
/usr/share/rvm/gems/ruby-2.7.4/gems/ffi-1.15.5/lib/ffi/library.rb:145:in `block in ffi_lib': Could not open library 'vips.so.42': vips.so.42: cannot open shared object file: No such file or directory. (LoadError)
Could not open library 'libvips.so.42': libvips.so.42: cannot open shared object file: No such file or directory
#+end_src

I found this particular GitHub thread on the 'libvips' library with a very similar error, most people in this thread said it has deal with an issue of 'vips' not being installed (of which I have no idea what that is):
- https://github.com/libvips/ruby-vips/issues/219

I then tried to refer to the related 'libvips' GitHub README, and just flat out installed 'ruby-vips' via this command:
#+begin_src bash
sam@notestation ~/hub/ClickClock $ gem install ruby-vips
Successfully installed ruby-vips-2.1.4
Parsing documentation for ruby-vips-2.1.4
Installing ri documentation for ruby-vips-2.1.4
Done installing documentation for ruby-vips after 1 seconds
1 gem installed
#+end_src

I then tried the same command as before again but received the same error as before:
#+begin_src bash
sam@notestation ~/hub/ClickClock $ rails new clickclock --skip-webpack-install --skip-javascript -d postgresql -m https://raw.githubusercontent.com/IsraelDCastro/rails-vite-tailwindcss-template/master/template.rb --vue
#+end_src

<2023-04-11 Tue 19:21>: I then did more research and found this particular GitHub issues thread on the same error as shown above:
- https://github.com/loomio/loomio/issues/9492

Within that thread, one of the commenters said to literally install the affected dependency, so I tried to via this command:
#+begin_src bash
sam@notestation ~/hub/ClickClock $ sudo apt-get install libvips libvips-dev
#+end_src

I was able to then successfully be able to get the related command working without a problem:
#+begin_src bash
sam@notestation ~/hub/ClickClock $ rails new clickclock --skip-webpack-install --skip-javascript -d postgresql -m https://raw.githubusercontent.com/IsraelDCastro/rails-vite-tailwindcss-template/master/template.rb --vue
#+end_src

<2023-04-11 Tue 19:38>: I was able to run 'rails s' without an issue, so I would say this portion is complete. The next item is to actually check out Vue's related docs.
*** DONE Install Vue + Vite since they go hand in hand with each other to get the basic 'Hello World' app working in 'dev' mode
<2023-04-17 Mon 11:44>: After a bit of thinking on this topic, I realized that my previous route of hoping some random Rails template would work is kind of silly. Plus, it didn't even install the package.json needed for Vue so clearly something is messed up with that guy's project, and he didn't bother to reply to my GitHub isuses page bug report, so it's whatever. I need to move on anyway.

With this in mind, I tried using this particular video as a guide:
- Creating Your First Vue 3 App with Vite - A Beginner's Tutorial (https://www.youtube.com/watch?v=JLt3GrDZDvQ)

I also used the related 'Vite' docs in tandem:
- https://vitejs.dev/guide/

I used this command accordingly:
#+begin_src bash
npm create vite@latest
#+end_src

I then followed the prompts accordingly.

I then proceeded to do the following commands:
#+begin_src bash
npm install
npm run dev
#+end_src

<2023-04-17 Mon 11:50> With that in mind, I was able to get the 'Hello World' type Vue app to work as intended.
** Cancelled
*** CANCELLED Ensure that the actual Vue.js related template actually installed Vue.js components
<2023-04-12 Wed 22:02>: Based on watching a few refresher videos on Vue.js, I realized that the template I'm using might not even be installing Vue.js correctly.

I went through the related process a few times but still noticed that only the '' directory contains anything Vue.js related.

I don't see any major 'package.json' manifest file for the project itself.

Here is the related GitHub issues bug I opened up for that template itself:
- https://github.com/IsraelDCastro/rails-vite-tailwindcss-template/issues/13

I might go ahead and just try with a basic Vue.js app going forward to be honest since this is really just a 3-part timer application anyway. I will think about this and debate this honestly.

<2023-04-17 Mon 11:42>: I went ahead and nuked the idea of having to learn Vue and to hook it up with Rails. It's way better to just use the tools that were meant for that framework, so I decided to forgo this and to just use Vue on its own with Vite and to get a Minimum Viable Product (MVP) going with a framework + wireframe before ever proceeding on anything else.
